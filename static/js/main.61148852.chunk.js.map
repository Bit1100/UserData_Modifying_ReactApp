{"version":3,"sources":["context.js","components/TabularData.jsx","hooks/userInput.js","components/Form.jsx","components/Modal.jsx","data.js","utils/storage.js","App.js","index.js"],"names":["context","createContext","contextProvider","Provider","TabularData","useContext","setFormData","usersData","setError","setModalActive","users","className","length","map","user","id","name","emailId","aadharNumber","panNumber","employeeType","joiningDate","onClick","msg","errStatus","UserInput","initialValue","useState","value","setValue","useEffect","reset","bind","onChange","e","target","Form","formData","updateUserData","error","useInput","bindId","resetId","bindName","resetName","bindEmailId","resetEmailId","bindAadharNumber","resetAadharNumber","bindPanNumber","resetPanNumber","bindEmployeeType","resetEmployeeType","bindJoiningDate","resetJoiningDate","Object","keys","constructor","onSubmit","type","disabled","placeholder","checked","Modal","modalActive","data","getUsers","JSON","parse","localStorage","getItem","fetchStatus","App","setUsersData","showError","setItem","stringify","setUsers","_usersData","preventDefault","email","aadharNo","panNo","updateUser","find","item","updateUserIndex","findIndex","trim","test","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAEaA,EAAUC,0BACVC,EAAkBF,EAAQG,S,OC4ExBC,EA5EK,WAClB,MAA6DC,qBAC3DL,GADMM,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,SAAUC,EAA1C,EAA0CA,eAGlCC,EAAUH,EAAVG,MACR,OACE,qBAAKC,UAAU,gBAAf,SACE,kCACE,2DACA,gCACE,+BACE,oCACA,sCACA,uCACA,+CACA,4CACA,+CACA,8CACA,sCACA,iDAGJ,gCACGD,GACCA,EAAME,OAAS,GACfF,EAAMG,KAAI,SAACC,GACT,IACEC,EAOED,EAPFC,GACAC,EAMEF,EANFE,KACAC,EAKEH,EALFG,QACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,UACAC,EAEEN,EAFFM,aACAC,EACEP,EADFO,YAEF,OACE,+BACE,6BAAKN,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BACE,wBACEC,QAAS,WACPd,EAAS,CAAEe,IAAK,GAAIC,WAAW,IAC/BlB,EAAYQ,IAEdH,UAAU,kBALZ,oBAUF,6BACE,wBACEW,QAAS,WACPd,EAAS,CAAEe,IAAK,GAAIC,WAAW,IAC/BlB,EAAYQ,GACZL,GAAe,IAEjBE,UAAU,kBANZ,uBApBKI,cCnBVU,EAlBG,SAACC,GACjB,MAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAIA,OAHAC,qBAAU,WACRD,EAASH,KACR,CAACA,IACG,CACLE,QACAC,WACAE,MAAO,kBAAMF,EAAS,KACtBG,KAAM,CACJJ,QACAK,SAAU,SAACC,GACTL,EAASK,EAAEC,OAAOP,WCiHXQ,EA3HF,WACX,MAOI/B,qBAAWL,GANbqC,EADF,EACEA,SACA/B,EAFF,EAEEA,YACAgC,EAHF,EAGEA,eACAC,EAJF,EAIEA,MACA/B,EALF,EAKEA,SACAC,EANF,EAMEA,eAGF,EAAyC+B,EAASH,EAAQ,IAA5CI,EAAd,EAAQT,KAAqBU,EAA7B,EAAsBX,MACtB,EAA6CS,EAASH,EAAQ,MAAhDM,EAAd,EAAQX,KAAuBY,EAA/B,EAAwBb,MACxB,EAAmDS,EACjDH,EAAQ,SADIQ,EAAd,EAAQb,KAA0Bc,EAAlC,EAA2Bf,MAG3B,EAA6DS,EAC3DH,EAAQ,cADIU,EAAd,EAAQf,KAA+BgB,EAAvC,EAAgCjB,MAGhC,EAAuDS,EACrDH,EAAQ,WADIY,EAAd,EAAQjB,KAA4BkB,EAApC,EAA6BnB,MAG7B,EAIIS,EAASH,EAAQ,cAHZjB,EADT,EACEQ,MACMuB,EAFR,EAEEnB,KACOoB,EAHT,EAGErB,MAEF,EAA2DS,EACzDH,EAAQ,aADIgB,EAAd,EAAQrB,KAA8BsB,EAAtC,EAA+BvB,MAc/B,OAAOM,GAC4B,IAAjCkB,OAAOC,KAAKnB,GAAUzB,QACtByB,EAASoB,cAAgBF,OACzB,GAEA,qBAAK5C,UAAU,YAAf,SACE,uBACE+C,SAAUpB,EACV3B,UAAU,kCAFZ,UAIG4B,EAAMf,UAAY,mBAAGb,UAAU,aAAb,SAA2B4B,EAAMhB,MAAW,GAC/D,+CAAOP,KAAK,KAAK2C,KAAK,QAAWlB,GAAjC,IAAyCmB,UAAQ,KACjD,+CACE5C,KAAK,OACL2C,KAAK,QACDhB,GAHN,IAIEkB,YAAY,qBAEd,+CACE7C,KAAK,QACL2C,KAAK,SACDd,GAHN,IAIEgB,YAAY,sBAEd,+CACE7C,KAAK,WACL2C,KAAK,QACDZ,GAHN,IAIEc,YAAY,8BAEd,+CACE7C,KAAK,QACL2C,KAAK,QACDV,GAHN,IAIEY,YAAY,2BAEd,sBAAKlD,UAAU,0CAAf,UACE,gCACE,mCACEgD,KAAK,QACL3C,KAAK,eACL8C,QAA0B,cAAjB1C,GACL+B,IAEN,gDAEF,gCACE,mCACEQ,KAAK,QACL3C,KAAK,eACL8C,QAA0B,cAAjB1C,GACL+B,IAEN,mDAGJ,mCACEnC,KAAK,cACL2C,KAAK,OACLE,YAAY,2BACRR,IAEN,sBAAK1C,UAAU,iDAAf,UACE,wBAAQW,QAAS,aAAUqC,KAAK,SAAShD,UAAU,kBAAnD,kBAGA,wBACEW,QAAS,WACPhB,EAAY,IA7EtBoC,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IAyEU9C,EAAS,CAAEe,IAAK,GAAIC,WAAW,IAC/Bf,GAAe,IAEjBE,UAAU,oBAPZ,6BC9EKoD,EA5BD,WACZ,MAA+D1D,qBAC7DL,GADMM,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,SAAUwD,EAA/B,EAA+BA,YAAavD,EAA5C,EAA4CA,eAG5C,OAAQuD,EAGN,qCACE,qBACE1C,QAAS,WACPhB,EAAY,IACZE,EAAS,CAAEe,IAAK,GAAIC,WAAW,IAC/Bf,GAAe,IAEjBE,UAAWqD,EAAc,yBAA2B,YAEtD,sBAAKrD,UAAWqD,EAAc,qBAAuB,QAArD,UACE,wBAAQrD,UAAU,eAAlB,SACE,oBAAIA,UAAU,UAAd,8BAEF,qBAAKA,UAAU,8CAAf,SACE,cAAC,EAAD,YAhBN,ICTSsD,G,MAAO,CAClB,CACElD,GAAI,EACJC,KAAM,OACNC,QAAS,uBACTC,aAAc,aACdC,UAAW,aACXC,aAAc,YACdC,YAAa,cAEf,CACEN,GAAI,EACJC,KAAM,SACNC,QAAS,yBACTC,aAAc,aACdC,UAAW,aACXC,aAAc,YACdC,YAAa,cAEf,CACEN,GAAI,EACJC,KAAM,SACNC,QAAS,yBACTC,aAAc,aACdC,UAAW,aACXC,aAAc,YACdC,YAAa,cAEf,CACEN,GAAI,EACJC,KAAM,SACNC,QAAS,yBACTC,aAAc,aACdC,UAAW,aACXC,aAAc,YACdC,YAAa,gBCnCJ6C,EAAW,WAGtB,MAAO,CACLxD,MAHYyD,KAAKC,MAAMC,aAAaC,QAAQ,UAI5CC,YAHkBJ,KAAKC,MAAMC,aAAaC,QAAQ,kBC6JvCE,EArJH,WACV,MAAkC7C,mBAAS,CACzCjB,MAAO,GACP6D,aAAa,IAFf,mBAAOhE,EAAP,KAAkBkE,EAAlB,KAIA,EAAgC9C,mBAAS,IAAzC,mBAAOU,EAAP,KAAiB/B,EAAjB,KACA,EAA0BqB,mBAAS,CAAEJ,IAAK,GAAIC,WAAW,IAAzD,mBAAOe,EAAP,KAAc/B,EAAd,KACA,EAAsCmB,oBAAS,GAA/C,mBAAOqC,EAAP,KAAoBvD,EAApB,KAsBA,SAASiE,EAAUnC,GACjB,IAAQhB,EAAmBgB,EAAnBhB,IAAKC,EAAce,EAAdf,UACbhB,EAAS,CAAEe,MAAKC,cAkGlB,OAvHAM,qBAAU,WAER2C,EAAa,2BACRlE,GADO,IAEVG,MAAOwD,IAAWxD,MAClB6D,YAAaL,IAAWK,gBAIzBL,IAAWK,aACVE,EAAa,2BAAKlE,GAAN,IAAiBG,MAAOuD,EAAMM,aAAa,OACxD,CAACE,IAGJ3C,qBAAU,YDzBY,SAACvB,GACvB8D,aAAaM,QAAQ,QAASR,KAAKS,UAAUrE,EAAUG,QACvD2D,aAAaM,QAAQ,cAAeR,KAAKS,UAAUrE,EAAUgE,cCwB3DM,CAAStE,KACR,CAACA,IAwGF,eAAC,EAAD,CACEqB,MAAO,CACLS,WACA/B,cACAgC,eAnGN,SAAwBJ,GAEtB,IAKI4C,EAAavE,EAAUG,MAC3BwB,EAAE6C,iBACF,MAQI7C,EAAEC,OAPJpB,EADF,EACEA,GACAC,EAFF,EAEEA,KACAgE,EAHF,EAGEA,MACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,MACA9D,EANF,EAMEA,aACAC,EAPF,EAOEA,YAII8D,EAAaL,EAAWM,MAAK,SAACC,GAAD,OAAUA,EAAKtE,MAAQA,EAAGa,SACvD0D,EAAkBR,EAAWS,WACjC,SAACF,GAAD,OAAUA,EAAKtE,MAAQA,EAAGa,SAMzBZ,EAAKY,MAAM4D,QACXR,EAAMpD,MAAM4D,QACZP,EAASrD,MAAM4D,QACfN,EAAMtD,MAAM4D,QACZpE,EAAaQ,MAAM4D,QACnBnE,EAAYO,MAAM4D,QAKnBd,EAAU,CAAEnD,IAAK,GAAIC,WAAW,IApCd,oBAwCHiE,KAAKzE,EAAKY,MAAM4D,SAO/BL,EAAWnE,KAAOA,EAAKY,MACvB8C,EAAU,CAAEnD,IAAK,GAAIC,WAAW,IA/Cb,8CAmDHiE,KAAKT,EAAMpD,MAAM4D,SAIjCL,EAAWlE,QAAU+D,EAAMpD,MAC3B8C,EAAU,CAAEnD,IAAK,GAAIC,WAAW,IAIJ,KAA1ByD,EAASrD,MAAMhB,QAIjBuE,EAAWjE,aAAe+D,EAASrD,MACnC8C,EAAU,CAAEnD,IAAK,GAAIC,WAAW,IA/Db,kBAmEHiE,KAAKP,EAAMtD,MAAM4D,SAIjCL,EAAWhE,UAAY+D,EAAMtD,MAC7B8C,EAAU,CAAEnD,IAAK,GAAIC,WAAW,IAzEP,gDA6EHiE,KAAKpE,EAAYO,QAIvCuD,EAAW9D,YAAcA,EAAYO,MACrC8C,EAAU,CAAEnD,IAAK,GAAIC,WAAW,IAIlCsD,EAAWY,OAAOJ,EAAiB,EAAGH,GACtCV,EAAa,2BAAKlE,GAAN,IAAiBG,MAAOoE,MATlCJ,EAAU,CAAEnD,IAAK,sBAAuBC,WAAW,KATnDkD,EAAU,CAAEnD,IAAK,qBAAsBC,WAAW,KATlDkD,EAAU,CAAEnD,IAAK,wBAAyBC,WAAW,KATrDkD,EAAU,CAAEnD,IAAK,iBAAkBC,WAAW,KAZ9CkD,EAAU,CACRnD,IAAK,yDACLC,WAAW,KAVbkD,EAAU,CAAEnD,IAAK,sBAAuBC,WAAW,KAiEjDe,QACA/B,WACAD,YACAyD,cACAvD,kBATJ,UAYE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCtJNkF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.61148852.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const context = createContext();\nexport const contextProvider = context.Provider;\n","import { useContext } from \"react\";\nimport { context } from \"../context\";\n\nconst TabularData = () => {\n  const { setFormData, usersData, setError, setModalActive } = useContext(\n    context\n  );\n  const { users } = usersData;\n  return (\n    <div className=\"table-wrapper\">\n      <table>\n        <caption>Indian Citizens Data</caption>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Aadhar Number</th>\n            <th>Pan Number</th>\n            <th>Employee Type</th>\n            <th>Joining Date</th>\n            <th>EDIT</th>\n            <th>Edit MODEL</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users &&\n            users.length > 0 &&\n            users.map((user) => {\n              const {\n                id,\n                name,\n                emailId,\n                aadharNumber,\n                panNumber,\n                employeeType,\n                joiningDate,\n              } = user;\n              return (\n                <tr key={id}>\n                  <td>{id}</td>\n                  <td>{name}</td>\n                  <td>{emailId}</td>\n                  <td>{aadharNumber}</td>\n                  <td>{panNumber}</td>\n                  <td>{employeeType}</td>\n                  <td>{joiningDate}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        setError({ msg: \"\", errStatus: false });\n                        setFormData(user);\n                      }}\n                      className=\"btn btn-primary\"\n                    >\n                      Edit\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        setError({ msg: \"\", errStatus: false });\n                        setFormData(user);\n                        setModalActive(true);\n                      }}\n                      className=\"btn btn-primary\"\n                    >\n                      MEdit\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TabularData;\n","import { useState, useEffect } from \"react\";\n\nconst UserInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: (e) => {\n        setValue(e.target.value);\n      },\n    },\n  };\n};\n\nexport default UserInput;\n","import { useContext } from \"react\";\nimport { context } from \"../context\";\nimport useInput from \"../hooks/userInput\";\n\nconst Form = () => {\n  let {\n    formData,\n    setFormData,\n    updateUserData,\n    error,\n    setError,\n    setModalActive,\n  } = useContext(context);\n\n  const { bind: bindId, reset: resetId } = useInput(formData[\"id\"]);\n  const { bind: bindName, reset: resetName } = useInput(formData[\"name\"]);\n  const { bind: bindEmailId, reset: resetEmailId } = useInput(\n    formData[\"emailId\"]\n  );\n  const { bind: bindAadharNumber, reset: resetAadharNumber } = useInput(\n    formData[\"aadharNumber\"]\n  );\n  const { bind: bindPanNumber, reset: resetPanNumber } = useInput(\n    formData[\"panNumber\"]\n  );\n  const {\n    value: employeeType,\n    bind: bindEmployeeType,\n    reset: resetEmployeeType,\n  } = useInput(formData[\"employeeType\"]);\n  const { bind: bindJoiningDate, reset: resetJoiningDate } = useInput(\n    formData[\"joiningDate\"]\n  );\n\n  function resetLocalState() {\n    resetId();\n    resetName();\n    resetEmailId();\n    resetAadharNumber();\n    resetPanNumber();\n    resetEmployeeType();\n    resetJoiningDate();\n  }\n\n  return formData &&\n    Object.keys(formData).length === 0 &&\n    formData.constructor === Object ? (\n    \"\"\n  ) : (\n    <div className=\"container\">\n      <form\n        onSubmit={updateUserData}\n        className=\"form flex flex-col items-center\"\n      >\n        {error.errStatus ? <p className=\"form-error\">{error.msg}</p> : \"\"}\n        <input name=\"id\" type=\"text\" {...bindId} disabled />\n        <input\n          name=\"name\"\n          type=\"text\"\n          {...bindName}\n          placeholder=\"Enter your Name\"\n        />\n        <input\n          name=\"email\"\n          type=\"email\"\n          {...bindEmailId}\n          placeholder=\"Enter your email\"\n        />\n        <input\n          name=\"aadharNo\"\n          type=\"text\"\n          {...bindAadharNumber}\n          placeholder=\"Enter your Aadhar Number\"\n        />\n        <input\n          name=\"panNo\"\n          type=\"text\"\n          {...bindPanNumber}\n          placeholder=\"Enter your Pan Number\"\n        />\n        <div className=\"radio flex justify-between items-center\">\n          <div>\n            <input\n              type=\"radio\"\n              name=\"employeeType\"\n              checked={employeeType === \"Full-Time\"}\n              {...bindEmployeeType}\n            />\n            <span>Full-time</span>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              name=\"employeeType\"\n              checked={employeeType === \"Part-Time\"}\n              {...bindEmployeeType}\n            />\n            <span>Part-time</span>\n          </div>\n        </div>\n        <input\n          name=\"joiningDate\"\n          type=\"text\"\n          placeholder=\"Enter your Joining Date\"\n          {...bindJoiningDate}\n        />\n        <div className=\"confirmation flex justify-betweem items-center\">\n          <button onClick={() => {}} type=\"submit\" className=\"btn btn-primary\">\n            Save\n          </button>\n          <button\n            onClick={() => {\n              setFormData({});\n              resetLocalState();\n              setError({ msg: \"\", errStatus: false });\n              setModalActive(false);\n            }}\n            className=\"btn btn-secondary\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useContext } from \"react\";\nimport Form from \"./Form\";\nimport { context } from \"../context\";\n\nconst Modal = () => {\n  const { setFormData, setError, modalActive, setModalActive } = useContext(\n    context\n  );\n  return !modalActive ? (\n    \"\"\n  ) : (\n    <>\n      <div\n        onClick={() => {\n          setFormData({});\n          setError({ msg: \"\", errStatus: false });\n          setModalActive(false);\n        }}\n        className={modalActive ? \"overlay overlay-active\" : \"overlay\"}\n      ></div>\n      <div className={modalActive ? \"modal modal-active\" : \"model\"}>\n        <header className=\"modal-header\">\n          <h2 className=\"heading\">Update Details</h2>\n        </header>\n        <div className=\"flex justify-center items-center modal-body\">\n          <Form />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","export const data = [\n  {\n    id: 1,\n    name: \"John\",\n    emailId: \"john@companyname.com\",\n    aadharNumber: \"3653782476\",\n    panNumber: \"R05HKI2BHY\",\n    employeeType: \"Full-Time\",\n    joiningDate: \"18-02-2019\",\n  },\n  {\n    id: 2,\n    name: \"Gulnar\",\n    emailId: \"gulnar@companyname.com\",\n    aadharNumber: \"5864636979\",\n    panNumber: \"JU3XUBVXFI\",\n    employeeType: \"Part-Time\",\n    joiningDate: \"09-04-2019\",\n  },\n  {\n    id: 3,\n    name: \"Maxene\",\n    emailId: \"maxene@companyname.com\",\n    aadharNumber: \"4439662981\",\n    panNumber: \"ZSIW4XGXWX\",\n    employeeType: \"Part-Time\",\n    joiningDate: \"04-06-2019\",\n  },\n  {\n    id: 4,\n    name: \"Joanna\",\n    emailId: \"joanna@companyname.com\",\n    aadharNumber: \"8992106113\",\n    panNumber: \"TRQ5GOSEKQ\",\n    employeeType: \"Full-Time\",\n    joiningDate: \"10-11-2019\",\n  },\n];\n","export const getUsers = () => {\n  const users = JSON.parse(localStorage.getItem(\"users\"));\n  const fetchStatus = JSON.parse(localStorage.getItem(\"fetchStatus\"));\n  return {\n    users,\n    fetchStatus,\n  };\n};\n\nexport const setUsers = (usersData) => {\n  localStorage.setItem(\"users\", JSON.stringify(usersData.users));\n  localStorage.setItem(\"fetchStatus\", JSON.stringify(usersData.fetchStatus));\n};\n","import { useEffect } from \"react\";\nimport TabularData from \"./components/TabularData\";\nimport Form from \"./components/Form\";\nimport Modal from \"./components/Modal\";\nimport \"./assets/styles/main.scss\";\nimport { useState } from \"react\";\nimport { contextProvider as Provider } from \"./context\";\nimport { data } from \"./data\";\nimport { getUsers, setUsers } from \"./utils/storage\";\n\nconst App = () => {\n  const [usersData, setUsersData] = useState({\n    users: [],\n    fetchStatus: false,\n  });\n  const [formData, setFormData] = useState({});\n  const [error, setError] = useState({ msg: \"\", errStatus: false });\n  const [modalActive, setModalActive] = useState(false);\n\n  // Getting the data from localStorage on Page Refresh\n  useEffect(() => {\n    // Get the data stored in localStorage on Page Refresh\n    setUsersData({\n      ...usersData,\n      users: getUsers().users,\n      fetchStatus: getUsers().fetchStatus,\n    });\n\n    // Get the ursersData from the array/remote for the first time only\n    !getUsers().fetchStatus &&\n      setUsersData({ ...usersData, users: data, fetchStatus: true });\n  }, [setUsersData]);\n\n  // Storing the new data into the localStorage\n  useEffect(() => {\n    setUsers(usersData);\n  }, [usersData]);\n\n  // Aet Error if it exists while form validation\n  function showError(error) {\n    const { msg, errStatus } = error;\n    setError({ msg, errStatus });\n  }\n\n  // Update the user data in the table after form validation\n  function updateUserData(e) {\n    // Regex Patterns\n    const namePattern = /[a-zA-Z0-9]{3,10}/;\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,6})+$/;\n    const joiningDatePattern = /(0[1-9]|[12]\\d|30|31)-(0[1-9]|1[0-2])-(201\\d)/;\n    const panNoPattern = /[a-zA-Z0-9]{10}/;\n\n    let _usersData = usersData.users;\n    e.preventDefault();\n    const {\n      id,\n      name,\n      email,\n      aadharNo,\n      panNo,\n      employeeType,\n      joiningDate,\n    } = e.target;\n\n    /* Update the data if any*/\n    const updateUser = _usersData.find((item) => item.id === +id.value);\n    const updateUserIndex = _usersData.findIndex(\n      (item) => item.id === +id.value\n    );\n\n    // Form Validation\n    /* Check for Empty Fields */\n    if (\n      !name.value.trim() ||\n      !email.value.trim() ||\n      !aadharNo.value.trim() ||\n      !panNo.value.trim() ||\n      !employeeType.value.trim() ||\n      !joiningDate.value.trim()\n    ) {\n      showError({ msg: \"All Fields Required\", errStatus: true });\n      return;\n    } else {\n      showError({ msg: \"\", errStatus: false });\n    }\n\n    /* Name Validation */\n    if (!namePattern.test(name.value.trim())) {\n      showError({\n        msg: \"Name must be at least 3 and at most 10 characters long\",\n        errStatus: true,\n      });\n      return;\n    } else {\n      updateUser.name = name.value;\n      showError({ msg: \"\", errStatus: false });\n    }\n\n    /* Email Validation */\n    if (!emailPattern.test(email.value.trim())) {\n      showError({ msg: \"Invalid E-mail\", errStatus: true });\n      return;\n    } else {\n      updateUser.emailId = email.value;\n      showError({ msg: \"\", errStatus: false });\n    }\n\n    /* Aadhar Validation */\n    if (aadharNo.value.length !== 10) {\n      showError({ msg: \"Invalid Aadhar Nunber\", errStatus: true });\n      return;\n    } else {\n      updateUser.aadharNumber = aadharNo.value;\n      showError({ msg: \"\", errStatus: false });\n    }\n\n    /* PAN Card Validation */\n    if (!panNoPattern.test(panNo.value.trim())) {\n      showError({ msg: \"Invalid PAN Number\", errStatus: true });\n      return;\n    } else {\n      updateUser.panNumber = panNo.value;\n      showError({ msg: \"\", errStatus: false });\n    }\n\n    /* Joining Date Validation */\n    if (!joiningDatePattern.test(joiningDate.value)) {\n      showError({ msg: \"Invalid Date Format\", errStatus: true });\n      return;\n    } else {\n      updateUser.joiningDate = joiningDate.value;\n      showError({ msg: \"\", errStatus: false });\n    }\n\n    // Replace the old value by new if updated\n    _usersData.splice(updateUserIndex, 1, updateUser);\n    setUsersData({ ...usersData, users: _usersData });\n  }\n\n  return (\n    <Provider\n      value={{\n        formData,\n        setFormData,\n        updateUserData,\n        error,\n        setError,\n        usersData,\n        modalActive,\n        setModalActive,\n      }}\n    >\n      <TabularData />\n      <Form />\n      <Modal />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}